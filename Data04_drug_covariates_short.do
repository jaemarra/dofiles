//  program:    Data04_drug_covariates_short.do
//  task:		Generate variables indicating  exposure to drug covariates in CPRD Dataset, using individual Therapy files
//  project: 	Incretins--Comparative mortality and CV outcomes (CPRD)
//  author:     JMG \ 30April2015

//clear all
//capture log close
//set more off

timer clear 2
timer on 2
	merge m:1 patid using Dates, nogen
	keep patid gemscriptcode studyentrydate_cprd2 cohortentrydate indexdate rxdate2
//#1 Extract medication covariates of interest using gemscriptcodes. Code so 0=no exposure and 1=exposure. 
// restrict to exposure in year prior to both cohort entry and index date (see end of this section for loops for this)

// thiazide and related diuretics 
local thiazcodes="(58976020|58977020|50481020|63248020|67597020|61267020|51047020|54815020|61684020|50651020|67326020|50654020|51857020|67598020|69291020|50633020|73233020|63540020|61687020|51462020|49873020|84103020|68134020|50482020|63249020|69296020|61268020|69292020|05297007|49872020|69293020|49062020|64663020|63211020|51994020|68844020|63541020|51068020|73883020|73241020|51463020|83957020|86950020|90559020|05580007|65442020|58678020|48202020|66717020|63267020|50252020|51854020|64409020|66716020|48201020|50380020|52834020|73918020|05317007|03217007|61214020|67204020|72035020|73882020|83981020|06749007|68129020|69268020|67627020|83982020|68130020|63279020|50657020|67082020|53154020|67219020|90731020|49322020|58231020|63763020|73921020|84712020|79035020|63257020|69269020|48303020|68972020|69032020|61276020|64368020|49321020|05300007|72036020|51466020|05298007|90629020|05299007|64533020|81472020|70712020|90631020|52358020|61275020|67631020|71715020|63252020|64530020|05975007|67090020|69280020|48386020|48387020|63762020|!4529101|!4828101|67620020|63254020|67621020|48847020|88006020|!1564101|81470020|72539020|75589020|75590020|88422020|80150020|!0606103|87996020|89781020|!0607101|!0607102|68145020|75350020|69274020|79843020|68015020|57165020|78942020|75814020|!7954101|80149020|82104020|06704007|48838020|!0607701|90637020|57793020|78343020|53155020|68841020|68980020|63282020|90635020|52359020|64126020|69277020|75349020|57164020|54691020|56910020|48839020|53521020|80831020|56755020|63225020|48846020|68979020|86952020|55246020|55247020|55391020|55390020|60352020|60492020|66500020|62827020|54653020|53522020|92367020|90735020|67220020|60353020|94709020|94277020|94427020|90733020|95950020|57796020|68065020|68581020|54690020|54654020|95960020|95348020|05458007|63983020|97115020|98337020|57007020|98339020|97012020|63283020|99566020|75757020|99769020|99773020|99771020|56911020|99775020|66033020|61938020|59993020|99501020|60381020|94685020|00689020|33486020|92909020|34961020|61691020|45436020|92033020|00683020|33496020|30321020|94928020|98525020|00682020|99777020|33494020|91770020|47939020|00685020|00690020|19362020|92809020)"
gen thiazdiur = 0 
replace thiazdiur = 1 if regexm(gemscriptcode, "`thiazcodes'")

// loop diuretics 
local loopcodes="(59420020|59419020|73909020|73910020|53107020|62135020|64264020|53108020|62142020|52368020|73968020|73971020|67963020|48499020|49564020|62148020|59424020|76008020|73911020|02507007|50110020|62143020|52375020|66726020|67230020|57115020|64266020|62144020|75245020|75244020|83764020|59421020|64272020|50105020|50100020|50116020|06676007|53005020|49059020|50115020|64265020|06672007|75560020|62138020|83268020|69287020|83765020|75555020|62154020|52643020|52640020|67213020|75554020|75559020|52766020|52763020|68240020|60884020|65855020|53109020|73977020|59523020|83766020|52363020|69286020|74377020|62139020|75561020|75373020|69288020|49199020|53101020|55562020|63601020|53340020|67231020|64269020|05786007|48216020|49105020|86513020|!4023101|75556020|!4023103|!2707101|!2710103|!2706901|!2707105|52999020|50933020|!2707801|49716020|!2710102|59808020|55921020|58432020|!4023107|62151020|49707020|!2711702|49715020|65493020|59809020|62291020|02242007|49706020|49717020|54000020|76021020|85983020|53871020|55922020|56655020|72279020|56648020|89311020|60151020|62708020|60338020|60274020|53872020|56459020|53338020|53877020|59627020|55923020|62808020|93499020|93839020|59167020|03663007|95531020|59590020|96714020|75618020|53867020|75613020|67325020|76949020|53339020|63792020|56479020|53873020|73018020|72847020|56458020|59626020|55328020|67150020|71525020|67666020|92509020|49711020|30828020|35233020|40472020|55325020|89326020|00697020|00696020|00727020|71009020|00693020|00703020|00724020|73015020)"
gen loopdiur = 0 
replace loopdiur = 1 if regexm(gemscriptcode, "`loopcodes'")

// Potassium-sparing diuretics and aldosterone antagonists
local aldoscodes="(73909020|73910020|53107020|50481020|59043020|59044020|66713020|70711020|70710020|58943020|58026020|57454020|53108020|62142020|49166020|57453020|69291020|59045020|67201020|73233020|57447020|73968020|73971020|06600007|67963020|49564020|62148020|03116007|50482020|69296020|69292020|73911020|02507007|06658007|69293020|49169020|58739020|62143020|54433020|66726020|57115020|57448020|68844020|62144020|57075020|73241020|75280020|49174020|50105020|56162020|67210020|57449020|66717020|58741020|63267020|66716020|63273020|67204020|83268020|69287020|58944020|75248020|88410020|53134020|67213020|73915020|75250020|53154020|67219020|75249020|90717020|50402020|53109020|75281020|88414020|73977020|58740020|03137007|63257020|73914020|69286020|69032020|88412020|53136020|53135020|75373020|72435020|69288020|63766020|70712020|04394007|55626020|!0208101|!0207101|!0208102|63252020|63264020|69280020|68513020|86513020|63254020|68514020|72539020|72514020|!2707801|!6724104|57612020|68145020|75350020|69274020|55921020|68827020|79843020|68015020|62291020|53155020|68841020|59102020|63282020|88416020|05894007|05180007|64126020|05182007|05181007|05996007|69277020|05176007|54000020|75349020|49311020|50619020|82357020|53609020|55922020|53610020|60338020|60274020|48461020|56459020|50617020|48451020|55621020|55013020|55923020|56393020|55251020|50611020|67220020|95531020|96714020|69121020|63792020|53503020|55623020|48466020|53611020|55250020|56479020|!7251101|97965020|56458020|50618020|60182020|58945020|55567020|63283020|55570020|49316020|48455020|00519021|00517021|92509020|59101020|74717020|37067020|20841020|20835020|20819020|00755020|35254020|35256020|35258020|35252020|20821020|31962020|34806020|05187007|34804020|34670020|35250020|34619020|34605020)"
gen potsparediur_aldos = 0 
replace potsparediur_aldos = 1 if regexm(gemscriptcode, "`aldoscodes'")

// Potassium-sparing diuretics with other diuretics
local ksparecodes="(73909020|73910020|53107020|50481020|70711020|70710020|58026020|57454020|53108020|62142020|49166020|57453020|69291020|73233020|73968020|73971020|67963020|49564020|62148020|50482020|69292020|73911020|69293020|62143020|66726020|57115020|62144020|57075020|73241020|50105020|66717020|63267020|66716020|63273020|67204020|83268020|69287020|67213020|73915020|53154020|67219020|53109020|73977020|63257020|73914020|69286020|69032020|75373020|72435020|69288020|63766020|70712020|63252020|63264020|86513020|63254020|72539020|68145020|75350020|55921020|79843020|68015020|!2051101|62291020|53155020|63282020|64126020|54000020|75349020|49311020|55922020|60338020|60274020|56459020|55013020|55923020|67220020|95531020|96714020|63792020|53503020|56479020|97965020|56458020|63283020|49316020|92509020|74717020|31962020)"
gen potsparediur_other = 0 
replace potsparediur_other = 1 if regexm(gemscriptcode, "`ksparecodes'")

// Antiarrhythmic drugs
local arrcodes="(63962020|50318020|60110020|59375020|68338020|59559020|69632020|64626020|63961020|50316020|64714020|60109020|66681020|61902020|56267020|58175020|58174020|61901020|55703020|66682020|69682020|50317020|63971020|02254007|58166020|58170020|62704020|59771020|64050020|58153020|51641020|62705020|68336020|58165020|67851020|69678020|54829020|54830020|92071020|63969020|60111020|61905020|51452020|63963020|51453020|55702020|63970020|54498020|54581020|58375020|51259020|54113020|70559020|82530020|56680020|59772020|64649020|48752020|51260020|64348020|75255020|69679020|66683020|58173020|71520020|54252020|82528020|64713020|53675020|58376020|52978020|74852020|51642020|77157020|75254020|05066007|48751020|54821020|82017020|54190020|79911020|54052020|54051020|66686020|69469020|54046020|50047020|54831020|52979020|54013020|63974020|58167020|64049020|64660020|77062020|69683020|63975020|71563020|59558020|86618020|04786007|06999007|55769020|80346020|70273020|66689020|51277020|71982020|74865020|59560020|79850020|88440020|66224020|74657020|48764020|92063020|67110020|52275020|54053020|64051020|54823020|54822020|84518020|78861020|58841020|55768020|56814020|85926020|53571020|84062020|61232020|54826020|66701020|75223020|75225020|52778020|54019020|53572020|54119020|80781020|05876007|!4080107|!4082104|79920020|81857020|58611020|71983020|52427020|06613007|69321020|53578020|50062020|!1756301|78642020|80779020|86751020|48753020|77973020|66311020|05779007|05494007|54045020|66690020|06306007|57658020|59466020|51964020|81858020|51296020|80625020|50788020|53573020|55774020|70556020|59557020|03665007|52276020|58610020|63927020|63730020|52777020|04443007|62710020|71986020|86374020|81676020|61163020|56857020|48473020|55773020|55775020|59468020|04782007|62666020|48474020|67542020|81022020|89855020|75218020|90951020|91509020|54107020|83509020|70555020|86744020|57662020|55471020|50069020|63653020|60186020|56537020|62667020|65314020|59307020|61147020|60016020|61894020|88438020|54658020|48990020|93497020|92059020|92067020|92749020|92915020|91253020|90953020|97689020|69464020|93471020|90949020|73560020|94645020|94651020|55581020|94581020|95917020|80305020|58956020|95501020|75895020|61972020|75892020|92917020|05507007|78850020|97161020|97251020|97249020|97469020|88482020|56023020|56022020|49581020|62060020|52274020|80051020|59821020|78853020|98192020|02897007|93252020|61895020|61164020|62059020|65838020|68754020|75069020|62706020|98194020|56381020|65991020|56572020|71362020|10431020|10418020|10410020|13362020|14628020|13481020|10420020|10425020|09405020|35456020|13364020|09407020|13483020|06590020|15829020|38483020|19907020|19909020|10440020|08994020|43943020|19906020|14629020|18929020|06592020|45119020|06591020|18757020|09682020|44353020|10432020|10419020|10411020|10435020|10415020|20827020|19904020|10443020|13367020|30154020|00846020|04115020|29982020|00893020|35610020|10413020|04109020|92021020|00850020|41299020|18925020|18923020|10417020|56571020|18933020|10424020|10437020|09421020|84516020|13363020|45118020|36606020|92489020|60185020|00903020|76705020|10409020|32333020|54047020|13486020)"
gen antiarrhythmic = 0 
replace antiarrhythmic = 1 if regexm(gemscriptcode, "`arrcodes'")

// Beta-blockers 
local bbcodes="(60153020|60152020|67920020|60300020|59375020|59368020|51941020|68438020|67597020|83178020|68440020|59369020|64666020|80458020|64667020|66307020|66681020|80607020|72238020|91125020|59370020|53253020|54495020|54494020|54815020|51857020|68439020|68333020|59361020|65274020|66308020|66682020|63899020|68629020|67598020|54886020|54493020|54818020|64896020|51860020|72526020|72236020|63900020|59362020|49929020|03534007|75253020|59374020|48397020|53660020|59360020|69296020|68353020|66694020|59365020|64050020|51641020|06228007|51584020|68965020|83758020|51994020|68847020|52291020|54433020|68332020|68375020|68844020|65802020|48767020|59376020|83180020|73883020|86492020|54829020|68354020|67919020|54830020|72237020|68976020|83179020|51862020|54884020|80460020|56162020|90711020|59926020|69193020|68838020|52703020|66693020|64670020|48396020|59925020|50252020|59924020|51499020|68837020|54885020|54498020|54259020|52702020|52834020|68652020|73918020|54881020|05317007|03217007|52545020|64895020|63928020|69746020|54880020|52285020|83986020|75255020|54879020|66683020|73882020|72696020|54252020|50246020|48722020|54539020|54889020|68369020|67627020|51642020|75254020|67160020|48400020|69745020|04397007|52701020|51646020|54821020|05741007|67082020|67081020|66686020|04319007|51861020|54538020|54831020|50247020|63763020|73921020|83183020|65806020|83182020|72243020|59935020|83760020|54543020|52381020|64049020|65803020|55786020|89120020|66704020|68850020|72691020|68972020|57243020|72692020|91055020|58485020|02319007|68966020|61276020|79593020|86794020|75020020|72698020|75023020|83190020|66689020|57624020|03667007|83191020|53671020|72241020|!8504177|83989020|72693020|04394007|61275020|67631020|57790020|62996020|55394020|53707020|63135020|67720020|72242020|83184020|83192020|51987020|52292020|50243020|68975020|66147020|72042020|72697020|86680020|!0681101|67090020|86681020|69280020|64051020|54823020|54822020|63762020|74896020|86502020|86500020|!4529101|84849020|04485007|58484020|!8504114|67620020|67621020|64899020|71607020|66314020|!6704106|!6000601|62681020|90893020|68813020|68814020|54826020|80150020|!0681102|53655020|04879007|66701020|!0394102|52999020|!0394103|!3121601|79243020|88272020|84837020|61503020|57667020|69274020|!5661101|05678007|05680007|68815020|85670020|56515020|57165020|78284020|03229007|62151020|80149020|04486007|!7046101|79594020|56705020|05679007|06704007|92243020|49156020|87165020|66311020|50423020|69482020|66690020|64900020|57658020|59466020|54244020|68841020|03289007|71407020|85953020|87099020|90895020|59496020|53709020|86682020|68980020|88268020|63850020|63927020|04484007|71512020|69479020|63851020|69277020|57093020|72687020|49923020|63161020|57164020|56093020|56910020|63160020|59468020|55395020|53521020|62676020|56706020|59465020|04480007|90619020|86847020|77372020|57210020|78135020|60550020|60233020|51023020|51022020|52914020|69739020|78494020|49177020|79217020|85990020|50437020|60232020|51024020|68979020|57662020|62689020|56836020|90617020|55246020|55247020|56768020|50072020|50073020|49917020|49922020|56194020|51424020|51777020|50424020|51438020|53708020|63653020|50435020|56767020|57037020|52913020|60352020|60231020|67708020|60551020|56537020|52915020|54125020|51440020|65314020|59307020|61147020|56094020|67705020|67913020|51439020|50422020|53351020|62677020|54653020|57038020|56034020|53352020|52909020|66703020|53461020|53522020|65979020|59464020|54245020|62688020|59302020|91235020|90891020|78143020|91253020|58483020|64558020|91237020|59303020|63159020|50847020|73449020|60353020|73574020|90779020|55581020|95260020|75624020|68806020|58956020|96562020|89270020|84559020|54126020|49924020|56193020|97076020|97074020|97367020|50436020|54654020|62682020|63783020|60515020|!4530101|!1385102|79595020|61054020|75323020|64019020|65838020|62726020|98730020|57013020|!3431105|77127020|56835020|66745020|91796020|64022020|71703020|51778020|71577020|96602020|99275020|99271020|04483007|00195021|00197021|00431021|56095020|56837020|67701020|67784020|56911020|75328020|00567021|76819020|00770021|00627021|00122021|54575020|49918020|00536021|70250020|00538021|00183020|37067020|31922020|00182020|01009020|41307020|41306020|73571020|01122020|00998020|08751020|20527020|20827020|40504020|01013020|01011020|69495020|61691020|39793020|70253020|78457020|00942020|31454020|01082020|31458020|01077020|00925020|92021020|00973020|00982020|62943020|00985020|40505020|01007020|01006020|74139020|78463020|35298020|34198020|01103020|44459020|01008020|99279020|00984020|99965020|00927020|08753020|01097020|71580020|00983020|40507020|63164020|60484020|45144020|20600020|20535020|00955020|40506020|77037020|45146020|01155020|01094020|08757020|47096020|77972020|01125020|08809020|00957020|45145020|20539020|00928020|08759020|34143020|01153020|01123020|19127020)"
gen betablock = 0 
replace betablock = 1 if regexm(gemscriptcode, "`bbcodes'")

// ACE Inhibitors
local aceicodes="(68572020|68575020|68571020|72676020|70737020|72573020|72674020|60791020|03900007|68570020|60790020|72572020|74178020|80174020|72675020|87055020|87049020|51047020|60377020|60378020|48566020|60792020|68133020|60379020|60796020|03203007|51462020|52609020|68134020|48565020|02652007|68562020|48567020|69849020|69081020|74174020|69082020|69850020|51068020|72670020|72568020|72671020|72569020|74179020|79311020|85253020|87057020|87053020|87051020|51463020|87061020|87059020|81266020|50822020|69848020|50823020|83957020|68564020|68563020|69843020|69080020|71439020|71440020|58451020|55119020|68567020|55120020|55121020|02913007|72669020|55352020|75607020|72035020|87063020|87606020|68554020|68129020|69268020|86080020|84482020|84483020|81446020|68130020|90539020|81445020|90557020|88326020|68559020|49386020|54164020|49387020|81267020|81182020|54165020|74175020|77942020|84712020|68555020|69844020|69845020|83699020|74293020|58452020|75604020|74296020|80674020|69269020|49385020|82305020|55291020|55290020|50589020|68556020|60797020|71438020|81181020|85824020|80675020|78452020|88718020|87231020|72036020|81183020|85883020|59646020|52608020|52610020|64822020|64814020|61344020|64818020|85865020|60798020|85903020|84462020|90115020|50588020|78451020|87820020|84490020|83449020|77941020|!8505496|73042020|!1100402|84464020|50587020|77943020|06272007|85703020|!1092601|85701020|84491020|86081020|!2215902|61260020|85815020|89909020|88107020|80671020|80672020|85702020|68139020|87608020|86079020|88105020|05959007|84463020|64809020|!8505226|68137020|86077020|61347020|68138020|84492020|80831020|60326020|84386020|81268020|65140020|67125020|88109020|75030020|60335020|73493020|69419020|67697020|56633020|69974020|67144020|65098020|67189020|67206020|67186020|55722020|67140020|69439020|67203020|67183020|61301020|65081020|67129020|67170020|67301020|67175020|67305020|56638020|56639020|69436020|67518020|67515020|69441020|67455020|67209020|65102020|67770020|67179020|63374020|56635020|67512020|61253020|61362020|65220020|67460020|68264020|56686020|56640020|67309020|61298020|61397020|91818020|91890020|73496020|60325020|93652020|75031020|94154020|94156020|59733020|67694020|94657020|94709020|94699020|94697020|94705020|94701020|94277020|94707020|94703020|75036020|95107020|74776020|95370020|89046020|95877020|95875020|95901020|95527020|95903020|87452020|95113020|96425020|89044020|67322020|60324020|65183020|65176020|65173020|65180020|56802020|56801020|61246020|59737020|61357020|87446020|89050020|73041020|61262020|61261020|61266020|61247020|91957020|61356020|65196020|65206020|65202020|65199020|92446020|56634020|61391020|65134020|56644020|76373020|98847020|75029020|63368020|91312020|68971020|65236020|73490020|65239020|65231020|68982020|99318020|71542020|75040020|89048020|00417021|00477021|56643020|59293020|61297020|65137020|65143020|00475021|71545020|68974020|68978020|76554020|73269020|99501020|75652020|76375020|01588020|01545020|19817020|34964020|74621020|20723020|92909020|30786020|19819020|34961020|66292020|01583020|01572020|38770020|01418020|01459020|01582020|20854020|01564020|01585020|19239020|40203020|40612020|01463020|01484020|10700020|01576020|01427020|69229020|61780020|01467020|75924020|20380020|69238020|70068020|10867020|91738020|19241020|01575020|09855020|75033020|01470020|01579020|76559020|35397020|01486020|67297020|67847020|01448020|01482020|01472020|47145020|65227020|61781020|47144020|39749020|47933020|01578020|10683020|47939020|01556020|70076020|01491020|20371020|01586020|01554020|01546020|01458020|01541020|01552020|01375020|01481020|75649020|01565020|01592020|84385020|01590020|65217020|47143020|74497020|47942020|47146020|30788020|01503020|01446020|67312020|76377020)"
gen acei = 0 
replace acei = 1 if regexm(gemscriptcode, "`aceicodes'")

// Angiotensin II receptor antagonist
local arbcodes="(76333020|81323020|81324020|83501020|79160020|88424020|85705020|85706020|76332020|85707020|83502020|79053020|76329020|82246020|83503020|79054020|81321020|81325020|79055020|86113020|76328020|74672020|78179020|74674020|78212020|78176020|79786020|83507020|87998020|84000020|88788020|85709020|85710020|84004020|83981020|89779020|83505020|83506020|85711020|80124020|80125020|83982020|87994020|84002020|74673020|84001020|81474020|88002020|79035020|81237020|88542020|80730020|78194020|88420020|58831020|84005020|84006020|81475020|81476020|49280020|90629020|81233020|90631020|78191020|57407020|89783020|88006020|88422020|88544020|87996020|89781020|88008020|90637020|90635020|88790020|!8502589|92773020|92953020|92951020|92767020|92367020|92957020|92769020|92763020|92765020|90735020|92365020|92771020|94158020|94443020|94425020|94429020|94427020|91976020|95334020|95336020|90733020|94445020|96351020|96963020|96929020|96923020|96965020|96925020|96927020|97243020|96933020|96931020|97245020|98337020|98339020|91979020|98993020|99779020|99769020|99773020|99771020|77302020|99775020|99783020|99785020|99789020|78259020|77320020|01641020|10510020|41315020|01640020|01771020|01643020|41456020|41317020|77734020|01764020|41680020|10152020|41322020|10518020|42156020|36312020|35425020|10088020|35998020|01748020|99791020|41320020|41310020|38960020|01669020|77299020|41435020|77737020|41324020|78678020|01661020|77731020|77349020|45155020|01673020|39798020|01660020|99777020|43882020|01644020|78684020|01658020|77510020|41454020|10517020|01677020|47162020|10512020|46326020|41316020)"
gen angiotensin2recepant = 0 
replace angiotensin2recepant = 1 if regexm(gemscriptcode, "`arbcodes'")

// Renin Inhibitors
local renincodes="(93926020|93930020|93932020|93928020)"
gen renini = 0 
replace renini = 1 if regexm(gemscriptcode, "`renincodes'")

// Renin angiotensin system (RAS) drugs
gen ras = 0 
replace ras = 1 if acei==1|angiotensin2recepant==1|renini==1
label variable ras "ras exposure: 0=no exp, 1=exp"
macro drop htwocodes ppicodes cortgicodes thiazcodes loopcodes aldoscodes ksparecodes arrcodes bbcodes aceicodes arbcodes renincodes

// nitrates 
local nitcodes="(63755020|74306020|68455020|68180020|74308020|63754020|55698020|62986020|56366020|50713020|62987020|49981020|63716020|06877007|50712020|06893007|63756020|63012020|55697020|68456020|53308020|53311020|56901020|63007020|63722020|68833020|63030020|62997020|58528020|56367020|63723020|49760020|74307020|74429020|68834020|63008020|62988020|63009020|63731020|83384020|63726020|63034020|78034020|77253020|62992020|63727020|80694020|86999020|65150020|84126020|80276020|90899020|84744020|58551020|51753020|51637020|56902020|69370020|51757020|55699020|54812020|68099020|68454020|63002020|51752020|51632020|51628020|65008020|51754020|63714020|73942020|68460020|59189020|73081020|80693020|68459020|65148020|63715020|84084020|63728020|65149020|59159020|86636020|84747020|80194020|63744020|86634020|85819020|58392020|58398020|49980020|49982020|64846020|64847020|77719020|84745020|66750020|76672020|66749020|51638020|52548020|52164020|58404020|70333020|85976020|56518020|73735020|54157020|65554020|80846020|78055020|66498020|82299020|85974020|78056020|58395020|73736020|56900020|58529020|58530020|49770020|80864020|78415020|73030020|87011020|65550020|63740020|78922020|56546020|55541020|80848020|55540020|84096020|63743020|51633020|!1488801|!4922601|!3564101|80865020|63013020|87528020|51624020|58389020|85621020|66998020|58401020|80852020|80853020|84742020|!2960301|!3420501|82425020|85681020|77256020|82301020|59155020|06583007|72441020|!3572101|65551020|78123020|84827020|77991020|50216020|!2188501|90545020|!3588301|78416020|86772020|50215020|85689020|56052020|88825020|75723020|78110020|78111020|79947020|78109020|75722020|85838020|84097020|79946020|52165020|84825020|51625020|!3588303|!8504046|66881020|88498020|91586020|79525020|63751020|84748020|78057020|61644020|79943020|53357020|84984020|65865020|!8504047|60866020|63747020|77791020|59812020|60394020|49759020|55374020|54036020|59428020|49893020|53264020|49899020|61875020|91051020|49884020|78957020|91588020|63759020|69626020|95513020|95515020|95509020|95583020|95873020|95871020|62320020|95511020|55343020|91814020|97527020|66021020|54035020|55375020|49898020|56051020|91614020|63719020|49761020|63014020|49894020|52251020|98416020|78242020|97247020|76504020|49885020|62795020|63391020|55379020|66733020|49765020|60948020|92799020|65752020|37821020|37816020|01860020|37809020|91590020|37822020|01836020|97513020|01838020|02122020|02114020|91612020|02118020|01863020|44105020|91057020|99995020|37818020|37811020)"
gen nitrates = 0 
replace nitrates = 1 if regexm(gemscriptcode, "`nitcodes'")

// calcium channel blockers 
local ccbcodes="(72826020|72827020|72563020|65053020|68508020|65052020|52181020|52179020|57066020|62588020|84301020|52180020|86603020|52564020|84862020|87704020|73827020|88863020|75164020|60296020|65453020|65395020|65396020|84427020|65057020|60297020|65403020|54944020|80873020|84203020|68602020|68472020|68629020|57176020|65397020|53062020|71948020|64630020|57177020|52574020|52575020|68603020|52565020|76293020|84421020|73828020|72565020|75266020|73759020|57067020|62586020|65031020|58377020|57178020|72560020|74745020|54862020|58870020|56683020|75264020|75265020|79719020|79074020|72822020|80874020|84204020|68474020|64631020|80337020|74597020|76295020|68847020|72177020|72564020|75522020|72558020|73758020|75521020|79075020|79521020|74744020|79993020|71013020|74598020|76294020|83624020|62587020|75621020|72176020|52063020|74596020|85619020|79553020|82933020|72823020|57068020|87706020|68477020|88865020|65383020|84428020|57458020|58764020|51782020|06750007|03142007|65032020|75515020|69560020|69563020|58375020|75162020|68652020|56680020|48758020|68479020|68473020|03901007|03072007|75163020|80875020|65384020|72559020|52064020|79520020|65382020|50475020|54678020|65404020|54677020|74741020|75520020|79935020|79994020|82544020|86770020|84877020|87083020|88897020|81943020|68599020|69592020|58376020|03117007|79519020|84876020|74190020|81446020|77698020|87826020|75258020|90541020|58763020|81445020|74740020|86724020|79934020|53065020|68478020|76104020|81213020|56931020|83066020|54863020|84423020|86668020|87834020|87836020|88895020|87832020|90705020|78368020|87828020|70830020|71014020|83276020|84570020|75622020|71435020|90707020|87544020|77697020|82546020|68850020|75963020|86669020|84494020|05075007|85589020|87830020|86867020|91263020|78409020|48759020|83067020|85824020|75491020|84579020|86339020|84734020|84733020|84211020|78452020|84732020|87065020|87067020|80135020|88811020|88252020|84422020|83479020|85883020|86144020|60315020|49568020|81472020|!8504107|04427007|82004020|82002020|86924020|68687020|68163020|68693020|05949007|83487020|82932020|56208020|48764020|79164020|77223020|84468020|51963020|85865020|75490020|57957020|87085020|85903020|86868020|84957020|70715020|86888020|86146020|78451020|87081020|85846020|49566020|60454020|54633020|50256020|70717020|85847020|85943020|79356020|70808020|83200020|84495020|68606020|84383020|56814020|84958020|!7642107|81470020|05613007|69392020|86128020|83478020|83480020|53571020|83201020|87956020|87958020|!4904103|!0062301|!4904104|!0061102|!4904102|53572020|90751020|86937020|83225020|86340020|86145020|49118020|53578020|79357020|69393020|69394020|77217020|77216020|76787020|75964020|81081020|68346020|80908020|91013020|68574020|60317020|70927020|88981020|65095020|!0062101|85815020|60425020|88258020|50788020|53573020|84959020|88260020|91113020|89660020|80745020|90599020|68509020|90601020|85740020|86711020|!1893701|87103020|68690020|78440020|76784020|83489020|83488020|86211020|81761020|56932020|50800020|80910020|88254020|49567020|55198020|49558020|60639020|67634020|75962020|60682020|67688020|68176020|90565020|66476020|56374020|58953020|88800020|67637020|61468020|68510020|61467020|59923020|49104020|60316020|53802020|49116020|68132020|54160020|53803020|50799020|54545020|87542020|92773020|92953020|92951020|92767020|92957020|92769020|92763020|92765020|92751020|91231020|88983020|92771020|54551020|68410020|81080020|88802020|81082020|90709020|94184020|91229020|92999020|88979020|94403020|59378020|73256020|93025020|95521020|95541020|95575020|95537020|95539020|95561020|95559020|95519020|95563020|95553020|54550020|95543020|95545020|93501020|94186020|70039020|67735020|96929020|65054020|96923020|54552020|92015020|96925020|92166020|65423020|96927020|53043020|96933020|96931020|95547020|56375020|53801020|56209020|60641020|50949020|85923020|68111020|97882020|68577020|65086020|69923020|54546020|97381020|89315020|75517020|61274020|75838020|49117020|66473020|57071020|60026020|98789020|92017020|98791020|97884020|75222020|97277020|66904020|86212020|56381020|99159020|68495020|64571020|71935020|99053020|91939020|99249020|65091020|63423020|91269020|99779020|54159020|99769020|99773020|00415021|99771020|65991020|99251020|56930020|60640020|00413021|63403020|85924020|75703020|59413020|73272020|77345020|77105020|99775020|98903020|76823020|99783020|97279020|60424020|99785020|93331020|95577020|99789020|97275020|90567020|91943020|68173020|01893020|01882020|01886020|01881020|39292020|11003020|37887020|01884020|01966020|01871020|20875020|38506020|01947020|11007020|00865020|44014020|01957020|01952020|39293020|41782020|01902020|01077020|99791020|01953020|20553020|01950020|01972020|68406020|20557020|02008020|01996020|75178020|68498020|01878020|83043020|18978020|19777020|99312020|99777020|01943020|02041020|92170020|59219020|02023020|37888020|02018020|01909020|01958020|47166020|77347020|77966020|47167020|14783021|01954020|01906020|01970020|78002020)"
gen calchan = 0 
replace calchan = 1 if regexm(gemscriptcode, "`ccbcodes'")

// oral anticoagulant
local coagocodes="(65437020|65438020|89966020|65439020|60995020|51558020|84736020|54866020|54867020|04258007|54868020|54849020|54847020|65650020|65649020|65648020|54848020|51559020|60996020|77096020|!7816102|51984020|52500020|52501020|51985020|55826020|51986020|55895020|50811020|50810020|50812020|52502020|55824020|63426020|55825020|62805020|62803020|62804020|59540020|62856020|55896020|55897020|57163020|93666020|94827020|94825020|95923020|94831020|94833020|95937020|94837020|68098020|65390020|94835020|56201020|56200020|56202020|91752020|99253020|00251021|00253021|62256020|00760021|00756021|00345021|00762021|57161020|96752020|00758021|37790020|39229020|41649020|02298020|02299020|38963020|00347021|02302020|02297020|46752020|39231020|37791020|57162020|20945020|02314020|39232020|63429020|39230020|77754020)"
gen anticoag_oral = 0 
replace anticoag_oral = 1 if regexm(gemscriptcode, "`coagocodes'")

// antiplatelet 
local platecodes="(52994020|72648020|52995020|00118007|03413007|54359020|69988020|54360020|73336020|00106007|73356020|52557020|73331020|70336020|49285020|83784020|84320020|75037020|86989020|56280020|51077020|62696020|62694020|83768020|50796020|50795020|00110007|62695020|70337020|58313020|51078020|70474020|50797020|05319007|05334007|55579020|73333020|64637020|84256020|05923007|00119007|03047007|85728020|84976020|84142020|84144020|70312020|85724020|77773020|05925007|05331007|05323007|68709020|63232020|73479020|73352020|03430007|00248007|00262007|03121007|05327007|02694007|74303020|70462020|00094007|03889007|05857007|69426020|02372007|05924007|00123007|05320007|05329007|48725020|65984020|80899020|52996020|63233020|68708020|85731020|68710020|52556020|64412020|00117007|73345020|81582020|05330007|03415007|73332020|48249020|69049020|03414007|80846020|51418020|06268007|04138007|75038020|73478020|05322007|05979007|00121007|82636020|72306020|73337020|62701020|06270007|64638020|56792020|69134020|!8504183|!8504188|74302020|63231020|80848020|78272020|70309020|84994020|82090020|82243020|!0373101|!0379102|03888007|!0373103|!0379101|77403020|00109007|73522020|55429020|79640020|80852020|80853020|65981020|75686020|03768007|63357020|05587007|70461020|75436020|00120007|73531020|03049007|59214020|68537020|05325007|06311007|00105007|00101007|48698020|05328007|!0373301|79130020|66025020|83262020|81581020|70471020|83115020|00196007|00100007|61334020|00112007|56223020|89845020|70665020|63356020|79131020|82494020|72645020|00095007|00114007|00115007|00107007|00111007|79858020|82244020|05321007|00247007|00261007|05332007|82882020|70466020|64485020|!0032801|81579020|00218007|70467020|81796020|03045007|00122007|63543020|74843020|74842020|82098020|70664020|54011020|56282020|06728007|65980020|86558020|54361020|57868020|58872020|53701020|62304020|48769020|82242020|48770020|72355020|73591020|62496020|05326007|62271020|81954020|66537020|48774020|56283020|62403020|63290020|84545020|72356020|48775020|54012020|48771020|57295020|58873020|51009020|56222020|51223020|59131020|59128020|59503020|66393020|91810020|81624020|92507020|75811020|69425020|70379020|94934020|94936020|96734020|96708020|96706020|51004020|00097007|51008020|96710020|97373020|96712020|59216020|48776020|53703020|95905020|00113007|74305020|77086020|48762020|59945020|56938020|96736020|69677020|57869020|06730007|66396020|99283020|48763020|56069020|55399020|99683020|00396021|53767020|65447020|99285020|78627020|59946020|62226020|77564020|61768020|02354020|02342020|08029020|02346020|04200020|14652020|08038020|02341020|02353020|60705020|59817020|02360020|08034020|78796020|02347020|02384020|29961020|08031020|76832020|63567020|66390020|02380020|04199020|04190020|08036020|69594020|14651020|02352020|08030020|02343020|76842020|74953020|02344020|77882020|63295020|78846020|08040020|02365020|47552020|76752020|47189020|02349020|47188020|77043020|02350020|02364020)"
gen antiplat = 0 
replace antiplat = 1 if regexm(gemscriptcode, "`platecodes'")

// statins 
local statcodes="(72488020|83943020|72487020|72489020|83944020|75344020|73782020|85632020|73783020|83945020|87029020|90773020|73784020|73787020|73789020|75345020|72482020|83955020|83953020|73788020|84284020|77174020|81727020|79882020|72484020|80350020|72483020|76621020|83954020|89242020|89881020|75340020|75341020|84282020|84283020|76618020|87027020|76259020|89246020|89260020|89262020|75346020|89258020|87025020|89250020|76624020|89255020|89248020|81729020|89883020|76531020|89244020|76460020|!6579801|!6579802|88103020|65854020|69857020|65848020|66042020|65879020|66045020|65924020|65883020|65927020|65672020|65920020|65851020|66039020|65677020|65668020|65949020|65905020|68205020|65952020|65962020|65910020|65829020|65939020|68275020|66208020|66656020|96566020|72886020|96704020|65874020|68201020|69804020|66993020|68272020|77364020|66659020|88014020|65967020|66205020|65935020|66066020|71629020|66069020|00573021|00569021|00575021|00571021|66058020|66323020|68735020|66063020|65957020|69800020|65932020|68278020|37402020|41848020|37429020|35411020|02512020|41846020|02518020|02496020|41345020|71634020|41330020|41912020|42161020|02514020|02501020|02524020|02523020|38510020|42167020|41343020|02515020|02542020|41328020|38509020|41338020|38511020|41905020|02479020|41913020|02511020|41349020|38515020|02489020|41331020|38514020|41906020|69807020|41347020|41344020|02510020|43826020|41327020|41288020|41329020|65902020|20743020|02548020|02505020|43806020|02506020|38512020|02502020|02519020|02495020|10669020|00042020|66326020|75882020|41292020|02490020|41326020|42148020|66652020|02521020|02517020|20745020|70097020|02485020|42166020|78017020|70094020|02494020|77492020|71626020|02486020|35160020|35413020|41336020|35417020|41907020|02508020|41337020|02557020|38787020|47853020|38784020|47203020|38786020|41891020|02618020|02488020|02504020|47180020|47204020|68731020|41325020|02564020|68450020|47205020|47030020|70090020|02553020|36882020|41342020|02544020|02491020|10666020)"
gen statin = 0 
replace statin = 1 if regexm(gemscriptcode, "`statcodes'")


// #2 Restrict covariate indicators to one year prior to index date and studyentrydate

			
			foreach y of varlist thiazdiur loopdiur potsparediur_aldos potsparediur_other antiarrhythmic betablock            /// 
					acei angiotensin2recepant renini ras nitrates calchan anticoag_oral antiplat statin {             
			generate `y'_i = 0										
			replace `y'_i = 1 if `y'==1 & rxdate2>=indexdate-365 & rxdate2<indexdate
			}

			foreach z of varlist thiazdiur loopdiur potsparediur_aldos potsparediur_other antiarrhythmic betablock            /// 
					acei angiotensin2recepant renini ras nitrates calchan anticoag_oral antiplat statin  {             
			generate `z'_s = 0										
			replace `z'_s = 1 if `z'==1 & rxdate2>=studyentrydate_cprd2-365 & rxdate2<studyentrydate_cprd2
			}

// #3 Collapse to one observation per patid.
	
collapse (max)  thiazdiur loopdiur potsparediur_aldos potsparediur_other antiarrhythmic betablock acei angiotensin2recepant ///
				renini ras nitrates calchan anticoag_oral antiplat thiazdiur_i loopdiur_i potsparediur_aldos_i potsparediur_other_i antiarrhythmic_i ///
				betablock_i acei_i angiotensin2recepant_i renini_i ras_i nitrates_i calchan_i anticoag_oral_i antiplat_i statin_i thiazdiur_s loopdiur_s potsparediur_aldos_s potsparediur_other_s ///
				antiarrhythmic_s betablock_s acei_s angiotensin2recepant_s renini_s ras_s nitrates_s calchan_s anticoag_oral_s antiplat_s statin_s, by(patid)
compress
// #4 Generate indicator variables fro the number of unique drugs for one year prior to study entry date, cohort entry date and index date.

//set local macros for the unique drug lists of interest
local rxlisti = "thiazdiur_i loopdiur_i potsparediur_aldos_i potsparediur_other_i antiarrhythmic_i betablock_i acei_i angiotensin2recepant_i renini_i ras_i nitrates_i calchan_i anticoag_oral_i antiplat_i statin_i"
local rxlists = "thiazdiur_s loopdiur_s potsparediur_aldos_s potsparediur_other_s antiarrhythmic_s betablock_s acei_s angiotensin2recepant_s renini_s ras_s nitrates_s calchan_s anticoag_oral_s antiplat_s statin_s"

//generate the variables for the unique drug windows
egen unqrxi= anycount(`rxlisti'), values(1)
label var unqrxi "Total number of unique drugs in the year prior to index date"
egen unqrxs= anycount(`rxlists'), values(1)
label var unqrxs "Total number of unique drugs in the year prior to study entry date"	

//tidy labelling
local x=0
local suffixes "_i _s"
local windows "cohortent index studyentry"
forval i=1/2   {
local x= `x'+1
local suffix: word `x' of `suffixes'
local next: word `x' of `windows'
label variable thiazdiur`suffix' "thiazide and related diuretic exposure (`next' window): 0=no exp, 1=exp"
label variable loopdiur`suffix' "loop diuretic exposure (`next' window): 0=no exp, 1=exp"
label variable potsparediur_aldos`suffix' "K-sparing diuretic and aldost agonist (`next' window): 0=no exp, 1=exp"
label variable potsparediur_other`suffix' "K-sparing diuretic and other diuretic (`next' window): 0=no exp, 1=exp"
label variable antiarrhythmic`suffix' "antiarrhythmic exposure (`next' window): 0=no exp, 1=exp"
label variable betablock`suffix' "beta-blocker exposure (`next' window): 0=no exp, 1=exp"
label variable acei`suffix' "ACE inhibitor exposure (`next' window): 0=no exp, 1=exp"
label variable angiotensin2recepant`suffix' "Angiotensin II recep antag (`next' window): 0=no exp, 1=exp"
label variable renini`suffix' "Renin inhibitor exposure (`next' window): 0=no exp, 1=exp"
label variable nitrates`suffix' "nitrates exposure (`next' window): 0=no exp, 1=exp"
label variable calchan`suffix' "calcium channel blocker exposure (`next' window): 0=no exp, 1=exp"
label variable anticoag_oral`suffix' "Oral anticoagulant exposure (`next' window): 0=no exp, 1=exp"
label variable antiplat`suffix' "antiplatelet exposure (`next' window): 0=no exp, 1=exp"
label variable statin`suffix' "statin exposure (`next' window): 0=no exp, 1=exp"
}


timer off 2
timer list 2
exit
log close

